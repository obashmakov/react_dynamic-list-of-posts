{"version":3,"sources":["api/posts.js","components/Posts/Posts.jsx","components/PostsList/PostsList.jsx","api/api.js","api/comments.js","components/Comments/Comments.jsx","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","userId","a","fetch","response","json","data","posts","filter","post","getPostDetails","postId","Posts","title","id","setPost","useState","button","setButton","className","type","onClick","PostsList","selectedUser","setPosts","useEffect","getUserPosts","then","map","key","request","url","options","ok","Error","status","statusText","result","getPostComments","comments","postComments","comment","createComment","name","email","body","method","headers","JSON","stringify","removeComment","commentId","Comments","updateComments","removeOnClick","NewCommentForm","setBody","userName","setUserName","setEmail","error","setError","sendComment","event","preventDefault","includes","handleChange","target","value","onSubmit","placeholder","onChange","PostDetails","selectedPost","setComments","commentsVisibility","setCommentsVisibility","loadPost","postDetails","App","setUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba70d78f.chunk.js","sourcesContent":["const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport async function getUserPosts(userId) {\n  const response = await fetch(`${BASE_URL}/posts`);\n  const data = await response.json();\n  const posts = await data.data;\n\n  if (userId === '0') {\n    return posts;\n  }\n\n  return posts.filter(post => post.userId === +userId);\n}\n\nexport async function getPostDetails(postId) {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const data = await response.json();\n  const post = await data.data;\n\n  return post;\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Posts = ({ title, userId, id, setPost }) => {\n  const [button, setButton] = useState(false);\n\n  const toggleInfo = () => {\n    setPost(id);\n    setButton(true);\n\n    if (button) {\n      setButton(false);\n      setPost(null);\n    }\n  };\n\n  return (\n    <li className=\"PostsList__item\">\n      <div>\n        <b>\n          {`[User #${userId}]: `}\n        </b>\n        {title}\n      </div>\n\n      <button\n        type=\"button\"\n        className=\"PostsList__button button\"\n        onClick={toggleInfo}\n      >\n        {!button\n          ? 'Open'\n          : 'Close'\n        }\n      </button>\n    </li>\n  );\n};\n\nPosts.propTypes = {\n  title: PropTypes.string.isRequired,\n  userId: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  setPost: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserPosts } from '../../api/posts';\nimport { Posts } from '../Posts';\nimport './PostsList.scss';\n\nexport const PostsList = ({ selectedUser, setPost }) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getUserPosts(selectedUser)\n      .then((post) => {\n        setPosts(post);\n      });\n  }, [selectedUser, setPosts]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <Posts\n            key={post.id}\n            title={post.title}\n            userId={post.userId}\n            id={post.id}\n            setPost={setPost}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  selectedUser: PropTypes.string.isRequired,\n  setPost: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport async function request(url, options) {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n\n  return result.data;\n}\n\nexport const post = (url, data) => request(url, {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(data),\n});\n","import { request, post } from './api';\n\nexport const getPostComments = async(postId) => {\n  const comments = await request('/comments');\n  const postComments = comments.filter(comment => comment.postId === postId);\n\n  return postComments;\n};\n\nexport const createComment = async(postId, name, email, body) => post(\n  '/comments', {\n    postId,\n    name,\n    email,\n    body,\n  },\n);\n\nconst remove = url => request(url, { method: 'DELETE' });\n\nexport const removeComment = commentId => remove(`/comments/${commentId}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { removeComment } from '../../api/comments';\n\nexport const Comments = ({ id, body, updateComments }) => {\n  const removeOnClick = async(commentId) => {\n    await removeComment(commentId);\n    updateComments();\n  };\n\n  return (\n    <li className=\"PostDetails__list-item\" key={id}>\n      <button\n        type=\"button\"\n        className=\"PostDetails__remove-button button\"\n        onClick={() => removeOnClick(id)}\n      >\n        X\n      </button>\n      <p>{body}</p>\n    </li>\n  );\n};\n\nComments.propTypes = {\n  id: PropTypes.number.isRequired,\n  body: PropTypes.string.isRequired,\n  updateComments: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, updateComments }) => {\n  const [body, setBody] = useState('');\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n\n  const sendComment = async(event) => {\n    event.preventDefault();\n\n    if (!userName || !body || !email) {\n      setError('Fill all fields, please');\n\n      return;\n    }\n\n    if (!email.includes('@')) {\n      setError('Enter valid email');\n\n      return;\n    }\n\n    await createComment(postId, userName, email, body);\n    updateComments();\n\n    setBody('');\n    setUserName('');\n    setEmail('');\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'body') {\n      setBody(value);\n    } else if (name === 'name') {\n      setUserName(value);\n    } else if (name === 'email') {\n      setEmail(value);\n    }\n\n    setError('');\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={sendComment}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={userName}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={handleChange}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n      {error && <p className=\"NewCommentForm__error\">{error}</p>}\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  updateComments: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Comments } from '../Comments';\nimport { getPostDetails } from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostComments } from '../../api/comments';\n\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPost }) => {\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [commentsVisibility, setCommentsVisibility] = useState(false);\n\n  useEffect(() => {\n    loadPost();\n    updateComments();\n  }, [selectedPost]);\n\n  const loadPost = async() => {\n    const postDetails = await getPostDetails(selectedPost);\n\n    setPost(postDetails);\n  };\n\n  const updateComments = async() => {\n    const postComments = await getPostComments(selectedPost);\n\n    setComments(postComments);\n  };\n\n  const toggleComments = () => {\n    setCommentsVisibility(!commentsVisibility);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        {post && (\n          <p>{post.body}</p>\n        )}\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={toggleComments}\n        >\n          {\n            commentsVisibility\n              ? 'Hide comments'\n              : 'Show comments'\n          }\n        </button>\n\n        {\n          commentsVisibility && (\n            <ul className=\"PostDetails__list\">\n              {comments.map(comment => (\n                <Comments\n                  id={comment.id}\n                  body={comment.body}\n                  updateComments={updateComments}\n                />\n              ))}\n            </ul>\n          )\n        }\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={selectedPost}\n            updateComments={updateComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPost: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [selectedUser, setUser] = useState('0');\n  const [selectedPost, setPost] = useState(null);\n\n  const selectUser = (event) => {\n    setUser(event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select className=\"App__user-selector\" onChange={selectUser}>\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList selectedUser={selectedUser} setPost={setPost} />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPost\n            ? <PostDetails selectedPost={selectedPost} />\n            : null\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}